plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/createdieselgenerators.accesswidener")
}

repositories {
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup("com.jamieswhiteshirt")
        }
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name "tterrag maven"
        url "https://maven.tterrag.com/"
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port

    maven { url = "https://jitpack.io/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("com.simibubi.create:create-fabric-1.20.1:0.5.1-f-build.1417+mc1.20.1")
    //modImplementation("maven.modrinth:create-fabric:0.5.1-f-build.1417+mc1.20.1")
    /*
    modApi(("com.tterrag.registrate_fabric:Registrate:$registrate_version")) {
        exclude(group: "io.github.fabricators_of_create") // avoid duplicate Porting Lib
    }

     */
    //modImplementation ("dev.emi:emi-fabric:${project.emi_version}")

    //modImplementation(("maven.modrinth:porting_lib:2.3.4+1.20.1"))
    //implementation "io.github.fabricators_of_create.Porting-Lib:Porting-Lib:2.1.1242+1.20.1"
    for (String module in port_lib_modules.split(",")) {
        modApi(("io.github.fabricators_of_create.Porting-Lib:$module:$port_lib_version"))
    }
    modImplementation("fuzs.forgeconfigapiport:forgeconfigapiport-fabric:$forge_config_api_port_version")

    //modApi("mezz.jei:jei-1.20.1-common-api:${jei_version}")
    //modApi("mezz.jei:jei-1.20.1-fabric-api:${jei_version}")
    modImplementation ("curse.maven:jei-238222:5101365")
    // at runtime, use the full JEI jar for Fabric
    modRuntimeOnly("mezz.jei:jei-1.20.1-fabric:${jei_version}")

    //compileOnly ("cc.tweaked:cc-tweaked-1.20.1-fabric-api:1.105.0")
    //runtimeOnly ("cc.tweaked:cc-tweaked-1.20.1-fabric:1.105.0")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}